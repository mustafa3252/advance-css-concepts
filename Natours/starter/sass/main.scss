@import "pages/home";

@import "abstracts/variables";
@import "abstracts/mixins";
@import "abstracts/functions";


@import "base/base";
@import "base/typography";
@import "base/animations";
@import "base/utilities";


*,
*::before,
*::after{
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html{
    font-size: 10px;
}

body{
    font-family: 'Lato', sans-serif;
    font-weight: 300;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box;
}

.header{
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8), ),
        url(../img/hero.jpg); 
    background-size: cover;
    background-position: top;
    position: relative;
    /* bacface used to remove the junkiness during animation*/
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); 
        /* start from top right, go clockwise, 
        if you want image to cover entire x or y co-ordinate use 100 percent, 
        if x and y does not move relative to the top right point, use 0 percent */

        &__logo-box{
            position: absolute;
            top: 4rem;
            left: 4rem;
        }
        
        &__logo{
            height: 3.5rem;
        }
        
        &__logo-box:hover .logo{
            animation: moveInRight 3s ease-out;
        }
        
        &__text-box{
            position: absolute;
            top: 40%;
            left: 50.5%;
            transform: translate(-50%, -50%);
            text-align: center;
        }
    
}



.heading-primary{
    color: $color-white;
    text-transform: uppercase;
    backface-visibility: hidden;
    margin-bottom: 5rem;

    &--main{
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        animation: moveInLeft 1s ease-out;
    }
    
    &--sub{
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.75rem;
        animation: moveInRight 1s  ease-out;
    }

}



@keyframes moveInLeft{
    0%{
        opacity: 0;
        transform: translateX(-10rem);
    }
    80%{
        transform: translateX(1rem);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight{
    0%{
        opacity: 0;
        transform: translateX(10rem);
    }
    80%{
        transform: translateX(-1rem);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    
    }   
}

@keyframes moveInBottom{

    0%{
       opacity: 0;
       transform: translateY(6rem);
    }
   
   
    100%{
       opacity: 1;
       transform: translateY(0);
    }
       
   }



.btn{

    &:link, 
    &:visited{
    text-transform: uppercase;
    text-decoration: none;
    display: inline-block;
    padding: 1.5rem 4rem;
    border-radius: 3rem;
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem;
    }

    &:hover{
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,0.2);

        &::after{
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    
    &:active{
        transform: translateY(-0.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black,0.2);
    }
    
    
    &--white{
        background-color: $color-white;
        color: $color-grey-dark;

        &::after{
            background-color: $color-white;
        }
    }
    
    &::after{
        content: '';
        display: inline-block;
        position: absolute; 
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 3rem;
        z-index: -1;
        transition: all 0.4s;
    }
    
    
    &--animated{
        animation: moveInBottom 1s ease-out 0.5s;
        animation-fill-mode: backwards; /*sets inital state to 0%*/
    }
    
// For the after pseuedo element, all the properties of the button need to be defiedn again for the after element with rules::after, eg: btn--white::after and btn:hover::after

//the animation calls is for button directly, not for the after element

//the animations in all the after elements, derive traition properties from the after element, not the main btn element


}


